name: Fluid Mesh Data Processing and Commit

on:
  push:
    branches:
      - "**"  # Triggers on any branch
  workflow_dispatch:

jobs:
  process_fluid_mesh_data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest dropbox

      - name: Debug Repository Structure
        run: ls -R "$GITHUB_WORKSPACE"

      - name: Verify Mesh Script Exists
        run: |
          echo "üîé Checking if generate_blender_mesh_format.py exists..."
          ls -R "$GITHUB_WORKSPACE/src"
          if [ ! -f "$GITHUB_WORKSPACE/src/generate_blender_mesh_format.py" ]; then
            echo "‚ùå Error: generate_blender_mesh_format.py not found in src directory!"
            exit 1
          else
            echo "‚úÖ Script found: generate_blender_mesh_format.py"
          fi

      - name: Delete All Previous Files in Testing-Input-Output
        run: |
          if [ -d "$GITHUB_WORKSPACE/data/testing-input-output/" ]; then
            rm -rf "$GITHUB_WORKSPACE/data/testing-input-output/*"
            echo "üóëÔ∏è Deleted all files inside data/testing-input-output/."
          else
            echo "‚ÑπÔ∏è No previous files found in data/testing-input-output/‚Äîproceeding with new generation."
          fi
      
      - name: Make `download_from_dropbox.sh` Executable
        run: chmod +x src/download_from_dropbox.sh
  
      - name: Download Simulation Files from Dropbox
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: src/download_from_dropbox.sh

      - name: Run Fluid Mesh Data Processing Script
        run: |
          python "$GITHUB_WORKSPACE/src/generate_blender_mesh_format.py"

      - name: Debug Output Directory
        run: ls -R "$GITHUB_WORKSPACE/data/testing-input-output"

      # --- Test Steps ---
      - name: Run Tests
        run: pytest tests/ --verbose -ra
      
      # --- REMOVED: Upload Generated Fluid Mesh JSON Artifact ---
      # This step is no longer needed as the file is committed directly.
      
      # - name: Commit and Push Fluid Mesh Data to Repository
      #   env:
      #     GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
      #     GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
      #   run: |
      #     git config --global user.name "${GIT_USER_NAME}"
      #     git config --global user.email "${GIT_USER_EMAIL}"
      
      #     cd "$GITHUB_WORKSPACE"
      
      #     GENERATED_FILE="data/testing-input-output/fluid_mesh_data.json"
          
      #     if [ -f "$GENERATED_FILE" ]; then
      #       git add "$GENERATED_FILE"
      #       git status
          
      #       if [[ $(git diff --cached --quiet; echo $?) -ne 0 ]]; then
      #         git commit -m "Auto-update: Generated animated fluid mesh data (JSON)"
      #         git push origin HEAD
      #       else
      #         echo "‚úÖ No changes to commit!"
      #       fi
      #     else
      #       echo "‚ùå No fluid mesh data JSON detected, skipping commit."
      #     fi

      - name: Make `upload_to_dropbox.sh` Executable
        run: chmod +x src/upload_to_dropbox.sh
  
      - name: Debug Before Dropbox Upload
        run: |
          echo "üîç Checking directory structure before upload..."
          ls -R $GITHUB_WORKSPACE
  
      - name: Upload Fluid Simulation Input to Dropbox
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: src/upload_to_dropbox.sh
